{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jyoth\\\\Documents\\\\ReactApps\\\\CustumHooks2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './components/hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transformTask = data => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  const {\n    counter,\n    error,\n    isLoading,\n    sendRequest: fetchTasks\n  } = useHttp({\n    url: 'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n    method: 'GET'\n  }, transformTask);\n  console.log(counter, error, isLoading, fetchTasks, tasks);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2tIVWv+L2+HtfPcNcN6pAuvx4EM=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jyoth/Documents/ReactApps/CustumHooks2/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","transformTask","data","loadedTasks","taskKey","push","id","text","counter","error","isLoading","sendRequest","fetchTasks","url","method","console","log","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,aAAa,GAAIC,IAAD,IAAU;AAC9B,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG;AAAnC,OAAjB;AACD;;AAEDP,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACD,GARD;;AAUA,QAAM;AAACK,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,WAAW,EAACC;AAAvC,MAAsDf,OAAO,CAAC;AAACgB,IAAAA,GAAG,EAAG,oFAAP;AAA6FC,IAAAA,MAAM,EAAG;AAAtG,GAAD,EACnEb,aADmE,CAAnE;AAGAc,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAoBC,KAApB,EAA0BC,SAA1B,EAAoCE,UAApC,EAAgDb,KAAhD;AACCN,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,UAAU;AACX,GAFS,EAEP,EAFO,CAAT;;AAID,QAAMK,cAAc,GAAIC,IAAD,IAAU;AAC/BlB,IAAAA,QAAQ,CAAEmB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAElB,KADT;AAEE,MAAA,OAAO,EAAEW,SAFX;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,OAAO,EAAEG;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnCQd,G;UAYqDD,O;;;KAZrDC,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './components/hooks/use-http'\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const transformTask = (data) => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  }\n  \n  const {counter,error, isLoading, sendRequest:fetchTasks } = useHttp({url : 'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', method : 'GET'},\n  transformTask\n  )\n  console.log(counter,error,isLoading,fetchTasks, tasks)\n   useEffect(() => {\n    fetchTasks();\n  }, []); \n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}