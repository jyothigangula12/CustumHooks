{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = (requestConfig, getData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      /*    try {\r\n       const response = await fetch(\r\n         \"https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\"\r\n       );  */\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      console.log(data, requestConfig, getData, response);\n      getData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n    console.log(error, isLoading, sendRequest);\n  };\n\n  return {\n    error,\n    isLoading,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/Users/jyoth/Documents/ReactApps/CustumHooks2/src/components/hooks/use-http.js"],"names":["useState","useHttp","requestConfig","getData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","err","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,OAAhB,KAA4B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAG,YAAY;AAC9BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEC,QAAI;AACH,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACR,aAAa,CAACS,GAAf,EAAoB;AAC9CC,QAAAA,MAAM,EAAEV,aAAa,CAACU,MAAd,GAAuBV,aAAa,CAACU,MAArC,GAA8C,KADR;AAE9CC,QAAAA,OAAO,EAAEX,aAAa,CAACW,OAAd,GAAwBX,aAAa,CAACW,OAAtC,GAAgD,EAFX;AAG9CC,QAAAA,IAAI,EAAEZ,aAAa,CAACY,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAed,aAAa,CAACY,IAA7B,CAArB,GAA0D;AAHlB,OAApB,CAA5B;AAMD;AACL;AACA;AACA;;AAEM,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBjB,aAAlB,EAAiCC,OAAjC,EAA0CM,QAA1C;AACAN,MAAAA,OAAO,CAACgB,IAAD,CAAP;AACD,KAnBA,CAmBC,OAAOI,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ,EAAmBF,SAAnB,EAA8BI,WAA9B;AAED,GA9BD;;AAgCA,SAAO;AACLF,IAAAA,KADK;AAELF,IAAAA,SAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD,CAzCD;;GAAMP,O;;AA0CN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp = (requestConfig, getData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n     try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : 'GET',\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        \r\n      }); \r\n     /*    try {\r\n      const response = await fetch(\r\n        \"https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\"\r\n      );  */\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data, requestConfig, getData, response);\r\n      getData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n\r\n    console.log(error, isLoading, sendRequest);\r\n\r\n  };\r\n \r\n  return {\r\n    error,\r\n    isLoading,\r\n    sendRequest,\r\n  };\r\n};\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}