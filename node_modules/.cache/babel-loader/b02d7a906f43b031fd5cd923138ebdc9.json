{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jyoth\\\\Documents\\\\ReactApps\\\\CustumHooks2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './components/hooks/use-http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const response = {};\n\n  const transformTask = data => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  };\n  /*  const {counter,error, isLoading, sendRequest:fetchTasks } = useHttp({url : 'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', method : 'GET'},\n   transformTask\n   )\n   console.log(counter,error,isLoading,fetchTasks, tasks) */\n\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    sendRequest;\n  }, []);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      response = await fetch('https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', {\n        method: 'GET'\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      transformTask(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: sendRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ojYhooNsno+ZHjjlGzjiqOG+IPU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jyoth/Documents/ReactApps/CustumHooks2/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","response","transformTask","data","loadedTasks","taskKey","push","id","text","isLoading","setIsLoading","error","setError","sendRequest","fetch","method","ok","Error","json","err","message","taskAddHandler","task","prevTasks","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,QAAQ,GAAG,EAAjB;;AACA,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG;AAAnC,OAAjB;AACD;;AAEDR,IAAAA,QAAQ,CAACI,WAAD,CAAR;AACD,GARD;AAUD;AACD;AACA;AACA;;;AAEE,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACDD,EAAAA,SAAS,CAAC,MAAI;AAACoB,IAAAA,WAAW;AAAC,GAAlB,EAAmB,EAAnB,CAAT;;AACC,QAAMA,WAAW,GAAG,YAAY;AAC9BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEU,QAAI;AACEX,MAAAA,QAAQ,GAAG,MAAMa,KAAK,CACtB,oFADsB,EAEtB;AACEC,QAAAA,MAAM,EAAE;AADV,OAFsB,CAAtB;;AAOhB,UAAI,CAACd,QAAQ,CAACe,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMd,IAAI,GAAG,MAAMF,QAAQ,CAACiB,IAAT,EAAnB;AAEAhB,MAAAA,aAAa,CAACC,IAAD,CAAb;AAED,KAhBW,CAgBT,OAAOgB,GAAP,EAAY;AACXP,MAAAA,QAAQ,CAACO,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAGD,GA1BD;;AA2BA,QAAMW,cAAc,GAAIC,IAAD,IAAU;AAC/BtB,IAAAA,QAAQ,CAAEuB,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEtB,KADT;AAEE,MAAA,OAAO,EAAEU,SAFX;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/DQf,G;;KAAAA,G;AAiET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './components/hooks/use-http'\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const response = {}\n  const transformTask = (data) => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  }\n  \n /*  const {counter,error, isLoading, sendRequest:fetchTasks } = useHttp({url : 'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', method : 'GET'},\n  transformTask\n  )\n  console.log(counter,error,isLoading,fetchTasks, tasks) */\n  \n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n useEffect(()=>{sendRequest},[])\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n  \n              try {\n                    response = await fetch(\n                    'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n                    {\n                      method: 'GET'\n                    }\n                  );       \n        \n    if (!response.ok) {\n      throw new Error(\"Request failed!\");\n    }\n\n    const data = await response.json();\n  \n    transformTask(data)\n   \n  }  catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  \n   \n  }\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={sendRequest}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}