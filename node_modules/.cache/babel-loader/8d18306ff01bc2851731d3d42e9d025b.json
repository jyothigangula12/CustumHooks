{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jyoth\\\\Documents\\\\ReactApps\\\\CustumHooks2\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const dataFromHook = {};\n  const [enterdData, setenterdData] = useState('');\n\n  const transformTask = data => {\n    //  const dataFromHook= Object.assign({},data);\n    console.log(enterdData);\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: enterdData\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const {\n    error,\n    isLoading,\n    sendRequest\n  } = useHttp({\n    url: \"https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n    method: \"POST\",\n    body: JSON.stringify({\n      text: enterdData\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }, transformTask);\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  const enterTaskHandler = async taskText => {\n    console.log(taskText);\n    setenterdData({\n      enterdData: taskText\n    });\n    dataFromHook = Object.assign({}, taskText);\n    console.log(dataFromHook);\n  };\n  /*  setIsLoading(true);\n    setError(null);\n   \n    try {\n      const response = await fetch(\n        'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n       if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n       const data = await response.json();\n       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n       props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }; */\n\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"EafH7olmoTyAewZoBqVGynra/Fg=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/jyoth/Documents/ReactApps/CustumHooks2/src/components/NewTask/NewTask.js"],"names":["useEffect","useState","Section","TaskForm","useHttp","NewTask","props","dataFromHook","enterdData","setenterdData","transformTask","data","console","log","generatedId","name","createdTask","id","text","onAddTask","error","isLoading","sendRequest","url","method","body","JSON","stringify","headers","enterTaskHandler","taskText","Object","assign"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,YAAY,GAAG,EAArB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMS,aAAa,GAAIC,IAAD,IAAU;AAChC;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACD,UAAMM,WAAW,GAAGH,IAAI,CAACI,IAAzB,CAH8B,CAGC;;AAC/B,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEV;AAAzB,KAApB;AAEAF,IAAAA,KAAK,CAACa,SAAN,CAAgBH,WAAhB;AACD,GAPD;;AAQA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAoClB,OAAO,CAC/C;AACEmB,IAAAA,GAAG,EAAE,oFADP;AAEEC,IAAAA,MAAM,EAAE,MAFV;AAGEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,MAAAA,IAAI,EAAEV;AAAR,KAAf,CAHR;AAIEoB,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAJX,GAD+C,EAS/ClB,aAT+C,CAAjD;AAWAV,EAAAA,SAAS,CAAC,MAAI;AAACsB,IAAAA,WAAW;AAAG,GAApB,EAAqB,EAArB,CAAT;;AACA,QAAMO,gBAAgB,GAAG,MAAMC,QAAN,IAAmB;AAC5ClB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACCrB,IAAAA,aAAa,CAAC;AAACD,MAAAA,UAAU,EAAGsB;AAAd,KAAD,CAAb;AACCvB,IAAAA,YAAY,GAAEwB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBF,QAAjB,CAAd;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAED,GAND;AASA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAME,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEsB,gBAAvB;AAAyC,MAAA,OAAO,EAAER;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArED;;GAAMf,O;UAWsCD,O;;;KAXtCC,O;AAuEN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../hooks/use-http\";\nconst NewTask = (props) => {\n  const dataFromHook = {}\n  const [enterdData, setenterdData] = useState('')\n  const transformTask = (data) => {\n  //  const dataFromHook= Object.assign({},data);\n     console.log(enterdData)\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: enterdData };\n\n    props.onAddTask(createdTask);\n  }\n  const { error, isLoading, sendRequest } = useHttp(\n    {\n      url: \"https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      body: JSON.stringify({ text: enterdData }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    transformTask\n  );\n  useEffect(()=>{sendRequest()},[])\n  const enterTaskHandler = async(taskText) => {\n  console.log(taskText)\n   setenterdData({enterdData : taskText})\n    dataFromHook= Object.assign({},taskText);\n    console.log(dataFromHook)\n  \n  }\n   \n  \n  /*  setIsLoading(true);\n    setError(null);\n   \n    try {\n      const response = await fetch(\n        'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }; */\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}