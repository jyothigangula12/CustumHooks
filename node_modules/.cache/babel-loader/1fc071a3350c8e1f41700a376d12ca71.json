{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jyoth\\\\Documents\\\\ReactApps\\\\CustumHooks2\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const enterdData = '';\n  enterTaskHandler = _s(async taskText => {\n    _s();\n\n    enterdData = taskText;\n\n    const transformTask = data => {\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    };\n\n    const {\n      error,\n      isLoading,\n      sendRequest\n    } = useHttp({\n      url: \"https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      body: JSON.stringify({\n        text: enterdData\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }, transformTask);\n  }, \"vALwo7lYq3sGPtKIpwIuJzxELnw=\", false, function () {\n    return [useHttp];\n  });\n  /*  setIsLoading(true);\n    setError(null);\n   \n    try {\n      const response = await fetch(\n        'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n       if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n       const data = await response.json();\n       const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n       props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/jyoth/Documents/ReactApps/CustumHooks2/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","useHttp","NewTask","props","isLoading","setIsLoading","error","setError","enterdData","enterTaskHandler","taskText","transformTask","data","generatedId","name","createdTask","id","text","onAddTask","sendRequest","url","method","body","JSON","stringify","headers"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMU,UAAU,GAAG,EAAnB;AAECC,EAAAA,gBAAgB,MAAG,MAAOC,QAAP,IAAoB;AAAA;;AACtCF,IAAAA,UAAU,GAAGE,QAAb;;AACA,UAAMC,aAAa,GAAIC,IAAD,IAAU;AAChC,YAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB,CADgC,CACD;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBI,QAAAA,IAAI,EAAEP;AAAzB,OAApB;AAEAP,MAAAA,KAAK,CAACe,SAAN,CAAgBH,WAAhB;AACD,KALC;;AAMF,UAAM;AAAET,MAAAA,KAAF;AAASF,MAAAA,SAAT;AAAoBe,MAAAA;AAApB,QAAoClB,OAAO,CAC/C;AACEmB,MAAAA,GAAG,EAAE,oFADP;AAEEC,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,IAAI,EAAET;AAAR,OAAf,CAHR;AAIEiB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJX,KAD+C,EAS/Cd,aAT+C,CAAjD;AAYC,GApBgB;AAAA,YAQyBV,OARzB;AAAA,IAAhB;AAqBD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAME,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEQ,gBAAvB;AAAyC,MAAA,OAAO,EAAEL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA/DD;;IAAMJ,O;;KAAAA,O;AAiEN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../hooks/use-http\";\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const enterdData = ''\n  \n   enterTaskHandler = async (taskText) => {\n    enterdData = taskText\n    const transformTask = (data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n  const { error, isLoading, sendRequest } = useHttp(\n    {\n      url: \"https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      body: JSON.stringify({ text: enterdData }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    transformTask\n  );\n   \n  };\n  /*  setIsLoading(true);\n    setError(null);\n   \n    try {\n      const response = await fetch(\n        'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }; */\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}