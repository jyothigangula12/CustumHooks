{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = async (requestConfig, getData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n    /* let response = {}\r\n    \n      try {\r\n    */\n\n    /*  response = await fetch(requestConfig.url ,\r\n        {\r\n          method: requestConfig.method ? requestConfig.method :'GET',\r\n          body: requestConfig.body ? JSON.stringify(requestConfig.body)  : null,\r\n          headers: requestConfig.headers? requestConfig.headers : {}\r\n        }) */\n\n    try {\n      const response = await fetch('https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', {\n        method: 'GET'\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      console.log(data, requestConfig, getData, response);\n      getData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n    console.log(error, isLoading, sendRequest);\n  };\n\n  return {\n    error,\n    isLoading,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/Users/jyoth/Documents/ReactApps/CustumHooks2/src/components/hooks/use-http.js"],"names":["useState","useHttp","requestConfig","getData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","method","ok","Error","data","json","console","log","err","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,OAAOC,aAAP,EAAsBC,OAAtB,KAAkC;AAAA;;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAG,YAAY;AAC9BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACL;AACA;AACA;;AACY;AACZ;AACA;AACA;AACA;AACA;;AACgB,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oFAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE;AADV,OAF0B,CAA5B;;AASd,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAiBZ,aAAjB,EAA+BC,OAA/B,EAAuCM,QAAvC;AACDN,MAAAA,OAAO,CAACW,IAAD,CAAP;AAEA,KAlBW,CAkBT,OAAOI,GAAP,EAAY;AACXX,MAAAA,QAAQ,CAACW,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAkBF,SAAlB,EAA6BI,WAA7B;AACD,GArCD;;AAsCA,SAAO;AACHF,IAAAA,KADG;AAEHF,IAAAA,SAFG;AAGHI,IAAAA;AAHG,GAAP;AAKH,CA/CD;;GAAMP,O;;AAgDN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp = async (requestConfig, getData) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n   \r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n     /* let response = {}\r\n    \r\n       try {\r\n */\r\n            /*  response = await fetch(requestConfig.url ,\r\n                {\r\n                  method: requestConfig.method ? requestConfig.method :'GET',\r\n                  body: requestConfig.body ? JSON.stringify(requestConfig.body)  : null,\r\n                  headers: requestConfig.headers? requestConfig.headers : {}\r\n                }) */\r\n                try {\r\n                    const response = await fetch(\r\n                      'https://react-http-cbdbb-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\r\n                      {\r\n                        method: 'GET'\r\n                       \r\n            \r\n                      }\r\n                    );       \r\n          \r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data,requestConfig,getData,response)\r\n     getData(data)\r\n     \r\n    }  catch (err) {\r\n        setError(err.message || 'Something went wrong!');\r\n      }\r\n      setIsLoading(false);\r\n    \r\n      console.log(error,isLoading ,sendRequest)\r\n    }\r\n    return {\r\n        error,\r\n        isLoading,\r\n        sendRequest\r\n    }\r\n}\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}